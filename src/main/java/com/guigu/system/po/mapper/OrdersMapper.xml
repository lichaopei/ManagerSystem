<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.system.po.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.system.po.Orders" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="customer" property="customer" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="front_cost" property="frontCost" jdbcType="DOUBLE" />
    <result column="second_cost" property="secondCost" jdbcType="DOUBLE" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
    <result column="make_up" property="makeUp" jdbcType="INTEGER" />
    <result column="photo" property="photo" jdbcType="INTEGER" />
    <result column="ps" property="ps" jdbcType="INTEGER" />
    <result column="choose" property="choose" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, type_id, customer, phone, date, front_cost, second_cost, flag, floor, make_up, 
    photo, ps, choose
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guigu.system.po.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guigu.system.po.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guigu.system.po.Orders" >
    insert into orders (order_id, type_id, customer, 
      phone, date, front_cost, 
      second_cost, flag, floor, 
      make_up, photo, ps, 
      choose)
    values (#{orderId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{customer,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{frontCost,jdbcType=DOUBLE}, 
      #{secondCost,jdbcType=DOUBLE}, #{flag,jdbcType=VARCHAR}, #{floor,jdbcType=INTEGER}, 
      #{makeUp,jdbcType=INTEGER}, #{photo,jdbcType=INTEGER}, #{ps,jdbcType=INTEGER}, 
      #{choose,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.guigu.system.po.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="customer != null" >
        customer,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="frontCost != null" >
        front_cost,
      </if>
      <if test="secondCost != null" >
        second_cost,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="makeUp != null" >
        make_up,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="ps != null" >
        ps,
      </if>
      <if test="choose != null" >
        choose,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="frontCost != null" >
        #{frontCost,jdbcType=DOUBLE},
      </if>
      <if test="secondCost != null" >
        #{secondCost,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="makeUp != null" >
        #{makeUp,jdbcType=INTEGER},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=INTEGER},
      </if>
      <if test="ps != null" >
        #{ps,jdbcType=INTEGER},
      </if>
      <if test="choose != null" >
        #{choose,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guigu.system.po.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.customer != null" >
        customer = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.frontCost != null" >
        front_cost = #{record.frontCost,jdbcType=DOUBLE},
      </if>
      <if test="record.secondCost != null" >
        second_cost = #{record.secondCost,jdbcType=DOUBLE},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.floor != null" >
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.makeUp != null" >
        make_up = #{record.makeUp,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=INTEGER},
      </if>
      <if test="record.ps != null" >
        ps = #{record.ps,jdbcType=INTEGER},
      </if>
      <if test="record.choose != null" >
        choose = #{record.choose,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      customer = #{record.customer,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      front_cost = #{record.frontCost,jdbcType=DOUBLE},
      second_cost = #{record.secondCost,jdbcType=DOUBLE},
      flag = #{record.flag,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=INTEGER},
      make_up = #{record.makeUp,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=INTEGER},
      ps = #{record.ps,jdbcType=INTEGER},
      choose = #{record.choose,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guigu.system.po.Orders" >
    update orders
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="frontCost != null" >
        front_cost = #{frontCost,jdbcType=DOUBLE},
      </if>
      <if test="secondCost != null" >
        second_cost = #{secondCost,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="makeUp != null" >
        make_up = #{makeUp,jdbcType=INTEGER},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=INTEGER},
      </if>
      <if test="ps != null" >
        ps = #{ps,jdbcType=INTEGER},
      </if>
      <if test="choose != null" >
        choose = #{choose,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guigu.system.po.Orders" >
    update orders
    set type_id = #{typeId,jdbcType=INTEGER},
      customer = #{customer,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      front_cost = #{frontCost,jdbcType=DOUBLE},
      second_cost = #{secondCost,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=INTEGER},
      make_up = #{makeUp,jdbcType=INTEGER},
      photo = #{photo,jdbcType=INTEGER},
      ps = #{ps,jdbcType=INTEGER},
      choose = #{choose,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>