<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.system.po.mapper.AttendanceRecordVOMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.system.po.AttendanceRecordVO" >
    <id column="Attendance_ID" property="attendanceId" jdbcType="INTEGER" />
    <result column="Employee_ID" property="employeeId" jdbcType="INTEGER" />
    <result column="Card_Number" property="cardNumber" jdbcType="VARCHAR" />
    <result column="Attendance_Date" property="attendanceDate" jdbcType="VARCHAR" />
    <result column="Attendance_Type" property="attendanceType" jdbcType="INTEGER" />
    <result column="Attendance_Memo" property="attendanceMemo" jdbcType="VARCHAR" />
    <result column="Admin_ID" property="adminId" jdbcType="INTEGER" />
    <result column="Temp_Department_ID" property="tempDepartmentId" jdbcType="INTEGER" />
    <result column="Node_ID" property="nodeId" jdbcType="INTEGER" />
    <result column="Employee_Name" property="employeeName" jdbcType="VARCHAR" />
    <result column="Type_Name" property="typeName" jdbcType="VARCHAR" />
    <result column="Admin_Name" property="adminName" jdbcType="VARCHAR" />
    <result column="Department_Name" property="departmentName" jdbcType="VARCHAR" />
    <result column="Type_Category" property="typeCategory" jdbcType="INTEGER" />
    
  </resultMap>
  <select id="findList" parameterType="com.guigu.system.po.AttendanceRecordVO" resultMap="BaseResultMap">
	select s.* from (select r.*,e.Employee_Name,t.Type_Name,t.Type_Category,d.Department_Name,a.Admin_Name from Attendance_Record r,Employees e,Attendance_Type t,Department d,
	Admin a	where r.Employee_ID=e.Employee_ID  and r.Attendance_Type=t.Type_ID and r.Temp_Department_ID=d.Department_ID and r.Admin_ID=a.Admin_ID) s
	<where>
		<if test="adminId!=null">
		and s.admin_id = #{adminId}
		</if>
		
		<if test="employeeName!=null and employeeName.trim!=null">
		and	s.Employee_Name like #{employeeName}
		</if>
		<if test="departmentName!=null and departmentName.trim!=null">
		and	s.Department_Name like #{departmentName}
		</if>
		<if test="typeName!=null and !typeName.trim.equals('')">
		and	s.Type_Name like  #{typeName}
		</if>
		<if test="attendanceDate!=null and !attendanceDate.trim.equals('')">
		and	s.attendance_Date like  #{attendanceDate}
		</if>
	</where>
</select>

 <insert id="save" parameterType="com.guigu.system.po.AttendanceRecordVO" >
    insert into attendance_Record (Employee_ID, Card_Number, 
      Attendance_Date, Attendance_Type,
      Admin_ID, Temp_Department_ID
      )
    values (#{employeeId,jdbcType=INTEGER}, #{cardNumber,jdbcType=VARCHAR}, 
      #{attendanceDate,jdbcType=TIMESTAMP}, #{attendanceType,jdbcType=INTEGER}, 
      #{adminId,jdbcType=INTEGER}, #{tempDepartmentId,jdbcType=INTEGER}
      )
  </insert>
  
  <select id="findOne" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select s.* from (select r.*,e.Employee_Name,t.Type_Name,t.Type_Category,d.Department_Name,a.Admin_Name from Attendance_Record r,Employees e,Attendance_Type t,Department d,
	Admin a	where r.Employee_ID=e.Employee_ID  and r.Attendance_Type=t.Type_ID and r.Temp_Department_ID=d.Department_ID and r.Admin_ID=a.Admin_ID) s
  where s.Attendance_ID= #{attendanceId,jdbcType=INTEGER}
  </select>
  
  <select id="findDept" parameterType="com.guigu.system.po.Admin" resultMap="BaseResultMap">
   select s.* from (select r.*,e.Employee_Name,t.Type_Name,t.Type_Category,d.Department_Name,a.Admin_Name from Attendance_Record r,Employees e,Attendance_Type t,Department d,
	Admin a	where r.Employee_ID=e.Employee_ID  and r.Attendance_Type=t.Type_ID and r.Temp_Department_ID=d.Department_ID and r.Admin_ID=a.Admin_ID and e.employee_state=1) s,Admin_Popedom ap
    where s.Temp_Department_ID=ap.Department_Id 
    <where>
    	<if test="adminId!=null">
    	    and ap.Admin_id=#{adminId}
    	</if>
    </where>
  </select>
  
  <select id="find" parameterType="com.guigu.system.po.EmpTestVO" resultMap="BaseResultMap">
	select s.* from (select r.*,e.Employee_Name,t.Type_Name,t.Type_Category,d.Department_Name,a.Admin_Name from Attendance_Record r,Employees e,Attendance_Type t,Department d,
	Admin a	where r.Employee_ID=e.Employee_ID  and r.Attendance_Type=t.Type_ID and r.Temp_Department_ID=d.Department_ID and r.Admin_ID=a.Admin_ID) s
	<where>
		<if test="employeeName!=null and employeeName.trim!=null and testDate!=null and !testDate.trim.equals('')" >
		 s.Employee_Name like #{employeeName}  and	s.attendance_Date like #{testDate}
		</if>
	</where>
	</select>
	
	<select id="attendanceTotal" parameterType="com.guigu.system.po.AttendanceRecordVO" resultType="Integer">
		select IFNULL(COUNT(a.attendance_type),0) from attendance_record a,employees e
		where a.Employee_ID=e.Employee_ID  and  e.Employee_Name = #{employeeName}  and a.Attendance_Type=#{attendanceType} and  a.Attendance_Date like #{attendanceDate} 
	</select>
  </mapper>